# name: Publish Docker image

# on:
#   push:
#     branches: ['master']

# jobs:
#   push_to_registry:
#     name: Push Docker image to Docker Hub
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v3
      
#       - name: Log in to Docker Hub
#         uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
      
#       - name: Extract metadata (tags, labels) for Docker
#         id: meta
#         uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
#         with:
#           images: derekchancts100/testnodejsapp
      
#       - name: Build and push Docker image
#         uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
#         with:
#           context: .
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}




# name: Publish Docker image ver2

# on:
#   push:
#     branches: ['master']

# jobs:
#   push_to_registry:
#     name: Push Docker image to Docker Hub ver2
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3
#         name: Check out code

#       - uses: mr-smithers-excellent/docker-build-push@v6
#         name: Build & push Docker image
#         with:
#           image: derekchancts100/testnodejsapp
#           tags: ver2
#           registry: docker.io
#           dockerfile: ./
#           enableBuildKit: true
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }} 




name: Publish Docker image ver3

on:
  push:
    branches: ['master']

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub ver3
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        name: Check out code

      - uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: my-app
          registry: ${{ secrets.REGISTRY }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}






# name: Publish Docker image ver3 - AWS ECR push

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   deploy:
#     name: Deploy
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ap-southeast-1

#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1

#     - name: Build, tag, and push the image to Amazon ECR
#       id: build-image
#       env:
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
#         IMAGE_TAG: latest
#       run: |
#         # Build a docker container and push it to ECR 
#         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#         echo "Pushing image to ECR..."
#         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#         echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"